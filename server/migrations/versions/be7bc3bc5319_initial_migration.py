"""initial migration

Revision ID: be7bc3bc5319
Revises: d09fdab233b2
Create Date: 2024-07-30 17:35:50.583968

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'be7bc3bc5319'
down_revision = 'd09fdab233b2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('games',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('playera_won', sa.Boolean(), nullable=False),
    sa.Column('playera_resigned', sa.Boolean(), nullable=False),
    sa.Column('playerb_resigned', sa.Boolean(), nullable=False),
    sa.Column('tied', sa.Boolean(), nullable=False),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.Column('playera_id', sa.Integer(), nullable=True),
    sa.Column('playerb_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['playera_id'], ['players.id'], name=op.f('fk_games_playera_id_players'), use_alter=True),
    sa.ForeignKeyConstraint(['playerb_id'], ['players.id'], name=op.f('fk_games_playerb_id_players'), use_alter=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('moves',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contents', sa.String(), nullable=False),
    sa.CheckConstraint('length(contents) >= 3'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('contents')
    )
    op.create_table('players',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('color', sa.String(), nullable=False),
    sa.Column('defers', sa.Boolean(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], name=op.f('fk_players_game_id_games'), use_alter=True),
    sa.PrimaryKeyConstraint('id', 'game_id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('_password_hash', sa.String(), nullable=True),
    sa.CheckConstraint('length(name) >= 1'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('game_moves',
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.Column('move_id', sa.Integer(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], name=op.f('fk_game_moves_game_id_games')),
    sa.ForeignKeyConstraint(['move_id'], ['moves.id'], name=op.f('fk_game_moves_move_id_moves')),
    sa.PrimaryKeyConstraint('game_id', 'move_id')
    )
    op.create_table('shows',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.CheckConstraint('length(description) >= 1'),
    sa.CheckConstraint('length(name) >= 1'),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name=op.f('fk_shows_owner_id_users')),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user_players',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], name=op.f('fk_user_players_player_id_players')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_players_user_id_users')),
    sa.PrimaryKeyConstraint('user_id', 'player_id')
    )
    op.create_table('episodes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('season_number', sa.Integer(), nullable=True),
    sa.Column('episode_number', sa.Integer(), nullable=True),
    sa.Column('show_id', sa.Integer(), nullable=True),
    sa.CheckConstraint('episode_number >= 1'),
    sa.CheckConstraint('length(description) >= 1'),
    sa.CheckConstraint('length(name) >= 1'),
    sa.CheckConstraint('season_number >= 1'),
    sa.ForeignKeyConstraint(['show_id'], ['shows.id'], name=op.f('fk_episodes_show_id_shows')),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('episode_number', 'season_number', 'show_id', name='unique_showid_epnumsnnumcombo')
    )
    op.create_table('toys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('show_id', sa.Integer(), nullable=True),
    sa.Column('toy_number', sa.Integer(), nullable=True),
    sa.CheckConstraint('length(description) >= 1'),
    sa.CheckConstraint('length(name) >= 1'),
    sa.CheckConstraint('price >= 0'),
    sa.CheckConstraint('toy_number >= 1'),
    sa.ForeignKeyConstraint(['show_id'], ['shows.id'], name=op.f('fk_toys_show_id_shows')),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('toy_number', 'show_id', name='unique_showid_toynumcombo')
    )
    op.create_table('user_episodes',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('episode_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['episode_id'], ['episodes.id'], name=op.f('fk_user_episodes_episode_id_episodes')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_episodes_user_id_users')),
    sa.PrimaryKeyConstraint('user_id', 'episode_id')
    )
    op.create_table('user_toys',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('toy_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.CheckConstraint('quantity >= 0'),
    sa.ForeignKeyConstraint(['toy_id'], ['toys.id'], name=op.f('fk_user_toys_toy_id_toys')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_toys_user_id_users')),
    sa.PrimaryKeyConstraint('user_id', 'toy_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_toys')
    op.drop_table('user_episodes')
    op.drop_table('toys')
    op.drop_table('episodes')
    op.drop_table('user_players')
    op.drop_table('shows')
    op.drop_table('game_moves')
    op.drop_table('users')
    op.drop_table('players')
    op.drop_table('moves')
    op.drop_table('games')
    # ### end Alembic commands ###
